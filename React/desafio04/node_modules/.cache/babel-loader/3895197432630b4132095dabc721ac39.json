{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\dio\\\\Orange-tech-Desafios\\\\React\\\\desafio04\\\\trilha-react-desafio-4\\\\src\\\\pages\\\\Login\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Container, LoginContainer, Column, Spacing, Title } from \"./styles\";\nimport { defaultValues } from \"./types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email(\"E-mail inválido\").required(\"Campo obrigatório\"),\n  password: yup.string().min(6, \"No minimo 6 caracteres\").required(\"Campo obrigatório\")\n}).required();\nlet count = 0;\n\nconst Login = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  count++;\n  const {\n    control,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onBlur\",\n    defaultValues,\n    reValidateMode: \"onChange\"\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(LoginContainer, {\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          placeholder: \"Email\",\n          control: control,\n          errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Senha\",\n          control: control,\n          errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"JlUrpsSBnkzYv/ailFgDGnQVE60=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","Button","Input","yupResolver","yup","Container","LoginContainer","Column","Spacing","Title","defaultValues","schema","object","email","string","required","password","min","count","Login","control","formState","errors","isValid","resolver","mode","reValidateMode","message"],"sources":["C:/Users/Danie/dio/Orange-tech-Desafios/React/desafio04/trilha-react-desafio-4/src/pages/Login/index.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Count from \"../../components/Count\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { Container, LoginContainer, Column, Spacing, Title } from \"./styles\";\r\nimport { defaultValues, IFormLogin } from \"./types\";\r\n\r\nconst schema = yup\r\n  .object({\r\n    email: yup.string().email(\"E-mail inválido\").required(\"Campo obrigatório\"),\r\n    password: yup\r\n      .string()\r\n      .min(6, \"No minimo 6 caracteres\")\r\n      .required(\"Campo obrigatório\"),\r\n  })\r\n  .required();\r\nlet count = 0;\r\nconst Login = () => {\r\n  count ++;\r\n  const {\r\n    control,\r\n    formState: { errors, isValid },\r\n  } = useForm<IFormLogin>({\r\n    resolver: yupResolver(schema),\r\n    mode: \"onBlur\",\r\n    defaultValues,\r\n    reValidateMode: \"onChange\",\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <LoginContainer>\r\n        \r\n        <Column>\r\n          <Title>Login</Title>\r\n          <Spacing />\r\n          <Input\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            control={control}\r\n            errorMessage={errors?.email?.message}\r\n          />\r\n          <Spacing />\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            control={control}\r\n            errorMessage={errors?.password?.message}\r\n          />\r\n          <Spacing />\r\n          <Button title=\"Entrar\" />\r\n        </Column>\r\n      </LoginContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,KAArD,QAAkE,UAAlE;AACA,SAASC,aAAT,QAA0C,SAA1C;;AAEA,MAAMC,MAAM,GAAGP,GAAG,CACfQ,MADY,CACL;EACNC,KAAK,EAAET,GAAG,CAACU,MAAJ,GAAaD,KAAb,CAAmB,iBAAnB,EAAsCE,QAAtC,CAA+C,mBAA/C,CADD;EAENC,QAAQ,EAAEZ,GAAG,CACVU,MADO,GAEPG,GAFO,CAEH,CAFG,EAEA,wBAFA,EAGPF,QAHO,CAGE,mBAHF;AAFJ,CADK,EAQZA,QARY,EAAf;AASA,IAAIG,KAAK,GAAG,CAAZ;;AACA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAAA;;EAClBD,KAAK;EACL,MAAM;IACJE,OADI;IAEJC,SAAS,EAAE;MAAEC,MAAF;MAAUC;IAAV;EAFP,IAGFvB,OAAO,CAAa;IACtBwB,QAAQ,EAAErB,WAAW,CAACQ,MAAD,CADC;IAEtBc,IAAI,EAAE,QAFgB;IAGtBf,aAHsB;IAItBgB,cAAc,EAAE;EAJM,CAAb,CAHX;EAUA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,cAAD;MAAA,uBAEE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,KAAD;UACE,IAAI,EAAC,OADP;UAEE,WAAW,EAAC,OAFd;UAGE,OAAO,EAAEN,OAHX;UAIE,YAAY,EAAEE,MAAF,aAAEA,MAAF,wCAAEA,MAAM,CAAET,KAAV,kDAAE,cAAec;QAJ/B;UAAA;UAAA;UAAA;QAAA,QAHF,eASE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QATF,eAUE,QAAC,KAAD;UACE,IAAI,EAAC,UADP;UAEE,IAAI,EAAC,UAFP;UAGE,WAAW,EAAC,OAHd;UAIE,OAAO,EAAEP,OAJX;UAKE,YAAY,EAAEE,MAAF,aAAEA,MAAF,2CAAEA,MAAM,CAAEN,QAAV,qDAAE,iBAAkBW;QALlC;UAAA;UAAA;UAAA;QAAA,QAVF,eAiBE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QAjBF,eAkBE,QAAC,MAAD;UAAQ,KAAK,EAAC;QAAd;UAAA;UAAA;UAAA;QAAA,QAlBF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CAvCD;;GAAMR,K;UAKAnB,O;;;KALAmB,K;AAyCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}